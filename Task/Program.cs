// Задача: Написать программу, которая из имеющегося массива строк формирует новый массив из строк, 
// длина которых меньше, либо равна 3 символам. Первоначальный массив можно ввести с клавиатуры, 
// либо задать на старте выполнения алгоритма. При решении не рекомендуется пользоваться коллекциями, 
// лучше обойтись исключительно массивами.

using System;

class Program
{
    static void Main(string[] args)
    {
        // Ввод исходного массива строк
        Console.WriteLine("Введите элементы массива (через запятую):");
        string input = Console.ReadLine();
        // Разбиваем строку на элементы массива по запятой
        string[] inputArray = input.Split(',');

        // Формирование нового массива строк
        string[] resultArray = FilterArray(inputArray);

        // Вывод нового массива
        Console.WriteLine("Результат:");
        foreach (string item in resultArray)
        {
            Console.WriteLine(item);
        }
    }

    // Метод для фильтрации исходного массива
    static string[] FilterArray(string[] inputArray)
    {
        // Переменная для подсчета количества строк, удовлетворяющих условию
        int count = 0;
        // Первый проход по массиву для подсчета подходящих строк
        foreach (string item in inputArray)
        {
            // Если длина текущей строки меньше или равна 3, увеличиваем счетчик
            if (item.Length <= 3)
            {
                count++;
            }
        }

        // Создаем новый массив нужного размера для хранения подходящих строк
        string[] resultArray = new string[count];
        // Индекс для заполнения нового массива
        int index = 0;
        // Второй проход по исходному массиву для заполнения нового массива
        foreach (string item in inputArray)
        {
            // Если длина текущей строки меньше или равна 3, добавляем ее в новый массив
            if (item.Length <= 3)
            {
                resultArray[index++] = item;
            }
        }

        // Возвращаем новый массив с подходящими строками
        return resultArray;
    }
}

